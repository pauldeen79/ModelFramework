<#@ template language="c#" #>
<#@ templateName value="CSharpClassGenerator.DefaultPropertyViewModel" #>
<#@ model type="IClassProperty" #>
<#@ templateContext #>
<#+
    public bool ShouldRenderModifiers => !(TemplateContext.GetModelFromContextByType<ITypeBase>() is IInterface);
    public bool ShouldRenderExplicitInterfaceName => !string.IsNullOrEmpty(Model.ExplicitInterfaceName) && !(TemplateContext.GetModelFromContextByType<ITypeBase>() is IInterface);
    public string TypeName => Model.TypeName.GetCsharpFriendlyTypeName()
                                            .AppendNullableAnnotation(Model, TemplateContext.GetContextByType<CSharpClassGenerator>().EnableNullableContext)
                                            .AbbreviateNamespaces(TemplateContext.GetModelFromContextByType<ITypeBase>().GetNamespacesToAbbreviate());
    public string Name => Model.Name.Sanitize().GetCsharpFriendlyName();
#>