// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 6.0.9
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace ModelFramework.Generators.Objects
{
    using CrossCutting.Common.Extensions;
    using ModelFramework.Common;
    using ModelFramework.Common.Contracts;
    using ModelFramework.Common.Extensions;
    using ModelFramework.Objects.Contracts;
    using ModelFramework.Objects.Extensions;
    using ModelFramework.Objects.Settings;
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using TextTemplateTransformationFramework.Runtime;

    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public partial class CSharpClassGenerator : CSharpClassGeneratorBase
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            if (TemplateContext.IsRootContext)
            {
                ViewModel.TemplateFileManager = new TemplateFileManager(b => this.GenerationEnvironment = b, () => this.GenerationEnvironment, BasePath);
                if (!GenerateMultipleFiles)
                {

            
            RenderChildTemplate(@"CSharpClassGenerator.CodeGenerationHeaderTemplate", this, null, false, null, null, new CustomDelegates { });

            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultUsingsTemplate", Model, false, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            }
            }
            else if (!GenerateMultipleFiles)
            {

            
            RenderChildTemplate(@"CSharpClassGenerator.CodeGenerationHeaderTemplate", this, null, false, null, null, new CustomDelegates { });

            }
            foreach (var ns in ViewModel.Namespaces)
            {
                if (TemplateContext.IsRootContext && !GenerateMultipleFiles)
                {

            Write(this.ToStringHelper.ToStringWithCulture(@"
"));
            Write(this.ToStringHelper.ToStringWithCulture(@"namespace "));
            Write(this.ToStringHelper.ToStringWithCulture(ns));
            Write(this.ToStringHelper.ToStringWithCulture(@"
{
"));
            }

            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultClassTemplate", ViewModel.GetClassesByNamespace(ns), null, false, @"NewLine", null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            if (TemplateContext.IsRootContext && !GenerateMultipleFiles)
                {

            Write(this.ToStringHelper.ToStringWithCulture(@"}
"));
            }
            }

            if (TemplateContext.IsRootContext)
            {
                ViewModel.TemplateFileManager.Process(GenerateMultipleFiles);
            }


            if (builder != null) this.GenerationEnvironment = backup;
        }


        protected System.Boolean _createCodeGenerationHeaderField;

        /// <summary>
        /// Access the CreateCodeGenerationHeader parameter of the template.
        /// </summary>
        public System.Boolean CreateCodeGenerationHeader
        {
            get
            {
                return this._createCodeGenerationHeaderField;
            }
        }
        protected System.Collections.Generic.IEnumerable<ModelFramework.Objects.Contracts.ITypeBase> _modelField;

        /// <summary>
        /// Access the Model parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Collections.Generic.IEnumerable<ModelFramework.Objects.Contracts.ITypeBase> Model
        {
            get
            {
                return this._modelField;
            }
        }
        protected System.Boolean _generateMultipleFilesField;

        /// <summary>
        /// Access the GenerateMultipleFiles parameter of the template.
        /// </summary>
        public System.Boolean GenerateMultipleFiles
        {
            get
            {
                return this._generateMultipleFilesField;
            }
        }
        protected System.Boolean _skipWhenFileExistsField;

        /// <summary>
        /// Access the SkipWhenFileExists parameter of the template.
        /// </summary>
        public System.Boolean SkipWhenFileExists
        {
            get
            {
                return this._skipWhenFileExistsField;
            }
        }
        protected System.String _environmentVersionField;

        /// <summary>
        /// Access the EnvironmentVersion parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String EnvironmentVersion
        {
            get
            {
                return this._environmentVersionField;
            }
        }
        protected System.String _basePathField;

        /// <summary>
        /// Access the BasePath parameter of the template.
        /// </summary>
        public System.String BasePath
        {
            get
            {
                return this._basePathField;
            }
        }
        protected System.String _fileNamePrefixField;

        /// <summary>
        /// Access the FileNamePrefix parameter of the template.
        /// </summary>
        public System.String FileNamePrefix
        {
            get
            {
                return this._fileNamePrefixField;
            }
        }
        protected System.String _fileNameSuffixField;

        /// <summary>
        /// Access the FileNameSuffix parameter of the template.
        /// </summary>
        public System.String FileNameSuffix
        {
            get
            {
                return this._fileNameSuffixField;
            }
        }
        protected System.Boolean _enableNullableContextField;

        /// <summary>
        /// Access the EnableNullableContext parameter of the template.
        /// </summary>
        public System.Boolean EnableNullableContext
        {
            get
            {
                return this._enableNullableContextField;
            }
        }
        protected CSharpClassGenerator_ViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        public CSharpClassGenerator_ViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }

        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            PlaceholderChildrenDictionary.Clear();
            this.ChildTemplates.Clear();
            this.ViewModels.Clear();
            RegisterChildTemplate(@"CommaAndNewLine", () => new CommaAndNewLine());
            RegisterChildTemplate(@"CommaAndSpace", () => new CommaAndSpace());
            RegisterChildTemplate(@"NewLine", () => new NewLine());
            if (additionalActionDelegate != null)
            {
                additionalActionDelegate();
            }
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultAttributeTemplate", () => new CSharpClassGenerator_DefaultAttributeTemplate(), typeof(IAttribute));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultParameterAttributeTemplate", () => new CSharpClassGenerator_DefaultParameterAttributeTemplate(), typeof(IAttribute));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultClassTemplate", () => new CSharpClassGenerator_DefaultClassTemplate(), typeof(ITypeBase));
            RegisterChildTemplate(@"CSharpClassGenerator.CodeGenerationHeaderTemplate", () => new CSharpClassGenerator_CodeGenerationHeaderTemplate(), typeof(CSharpClassGenerator));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultCtorTemplate", () => new CSharpClassGenerator_DefaultCtorTemplate(), typeof(IClassConstructor));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultEnumMemberTemplate", () => new CSharpClassGenerator_DefaultEnumMemberTemplate(), typeof(IEnumMember));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultEnumTemplate", () => new CSharpClassGenerator_DefaultEnumTemplate(), typeof(IEnum));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultFieldTemplate", () => new CSharpClassGenerator_DefaultFieldTemplate(), typeof(IClassField));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultMethodTemplate", () => new CSharpClassGenerator_DefaultMethodTemplate(), typeof(IClassMethod));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultParameterTemplate", () => new CSharpClassGenerator_DefaultParameterTemplate(), typeof(IParameter));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultParameterValueTemplate", () => new CSharpClassGenerator_DefaultParameterValueTemplate(), typeof(IParameter));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultPropertyGetterBodyTemplate", () => new CSharpClassGenerator_DefaultPropertyGetterBodyTemplate(), typeof(IClassProperty));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultPropertyInitializerBodyTemplate", () => new CSharpClassGenerator_DefaultPropertyInitializerBodyTemplate(), typeof(IClassProperty));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultPropertySetterBodyTemplate", () => new CSharpClassGenerator_DefaultPropertySetterBodyTemplate(), typeof(IClassProperty));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultPropertyTemplate", () => new CSharpClassGenerator_DefaultPropertyTemplate(), typeof(IClassProperty));
            RegisterChildTemplate(@"CSharpClassGenerator.DefaultUsingsTemplate", () => new CSharpClassGenerator_DefaultUsingsTemplate(), typeof(IEnumerable<ITypeBase>));
            RegisterViewModel(@"CSharpClassGenerator.ViewModel", () => new CSharpClassGenerator_ViewModel(), typeof(System.Collections.Generic.IEnumerable<ModelFramework.Objects.Contracts.ITypeBase>));
            RegisterViewModel(@"CSharpClassGenerator.DefaultAttributeViewModel", () => new CSharpClassGenerator_DefaultAttributeViewModel(), typeof(IAttribute));
            RegisterViewModel(@"CSharpClassGenerator.DefaultParameterAttributeViewModel", () => new CSharpClassGenerator_DefaultParameterAttributeViewModel(), typeof(IAttribute));
            RegisterViewModel(@"CSharpClassGenerator.DefaultClassViewModel", () => new CSharpClassGenerator_DefaultClassViewModel(), typeof(ITypeBase));
            RegisterViewModel(@"CSharpClassGenerator.DefaultCtorViewModel", () => new CSharpClassGenerator_DefaultCtorViewModel(), typeof(IClassConstructor));
            RegisterViewModel(@"CSharpClassGenerator.DefaultFieldViewModel", () => new CSharpClassGenerator_DefaultFieldViewModel(), typeof(IClassField));
            RegisterViewModel(@"CSharpClassGenerator.DefaultMethodViewModel", () => new CSharpClassGenerator_DefaultMethodViewModel(), typeof(IClassMethod));
            RegisterViewModel(@"CSharpClassGenerator.DefaultParameterViewModel", () => new CSharpClassGenerator_DefaultParameterViewModel(), typeof(IParameter));
            RegisterViewModel(@"CSharpClassGenerator.DefaultPropertyViewModel", () => new CSharpClassGenerator_DefaultPropertyViewModel(), typeof(IClassProperty));
            RegisterViewModel(@"CSharpClassGenerator.DefaultUsingsViewModel", () => new CSharpClassGenerator_DefaultUsingsViewModel(), typeof(IEnumerable<ITypeBase>));
            bool createCodeGenerationHeaderValueAcquired = false;
            if (this.Session != null && this.Session.ContainsKey("CreateCodeGenerationHeader") && this.Session["CreateCodeGenerationHeader"] != null)
            {
                if ((typeof(System.Boolean).IsAssignableFrom(this.Session["CreateCodeGenerationHeader"].GetType()) == false))
                {
                    this.Error("The type \'System.Boolean\' of the parameter \'CreateCodeGenerationHeader\' did not match the type of the data passed to the template.");
                }
                else
                {
                    this._createCodeGenerationHeaderField = ((System.Boolean)(this.Session["CreateCodeGenerationHeader"]));
                    createCodeGenerationHeaderValueAcquired = true;
                }
            }
            if ((createCodeGenerationHeaderValueAcquired == false))
            {
                this._createCodeGenerationHeaderField = default(System.Boolean);
                createCodeGenerationHeaderValueAcquired = true;
            }
            if (this.Session != null && this.Session.ContainsKey("Model") && this.Session["Model"] != null)
            {
                if ((typeof(System.Collections.Generic.IEnumerable<ModelFramework.Objects.Contracts.ITypeBase>).IsAssignableFrom(this.Session["Model"].GetType()) == false))
                {
                    this.Error("The type \'System.Collections.Generic.IEnumerable<ModelFramework.Objects.Contracts.ITypeBase>\' of the parameter \'Model\' did not match the type of the data passed to the template.");
                }
                else
                {
                    this._modelField = ((System.Collections.Generic.IEnumerable<ModelFramework.Objects.Contracts.ITypeBase>)(this.Session["Model"]));
                }
            }
            bool generateMultipleFilesValueAcquired = false;
            if (this.Session != null && this.Session.ContainsKey("GenerateMultipleFiles") && this.Session["GenerateMultipleFiles"] != null)
            {
                if ((typeof(System.Boolean).IsAssignableFrom(this.Session["GenerateMultipleFiles"].GetType()) == false))
                {
                    this.Error("The type \'System.Boolean\' of the parameter \'GenerateMultipleFiles\' did not match the type of the data passed to the template.");
                }
                else
                {
                    this._generateMultipleFilesField = ((System.Boolean)(this.Session["GenerateMultipleFiles"]));
                    generateMultipleFilesValueAcquired = true;
                }
            }
            if ((generateMultipleFilesValueAcquired == false))
            {
                this._generateMultipleFilesField = default(System.Boolean);
                generateMultipleFilesValueAcquired = true;
            }
            bool skipWhenFileExistsValueAcquired = false;
            if (this.Session != null && this.Session.ContainsKey("SkipWhenFileExists") && this.Session["SkipWhenFileExists"] != null)
            {
                if ((typeof(System.Boolean).IsAssignableFrom(this.Session["SkipWhenFileExists"].GetType()) == false))
                {
                    this.Error("The type \'System.Boolean\' of the parameter \'SkipWhenFileExists\' did not match the type of the data passed to the template.");
                }
                else
                {
                    this._skipWhenFileExistsField = ((System.Boolean)(this.Session["SkipWhenFileExists"]));
                    skipWhenFileExistsValueAcquired = true;
                }
            }
            if ((skipWhenFileExistsValueAcquired == false))
            {
                this._skipWhenFileExistsField = default(System.Boolean);
                skipWhenFileExistsValueAcquired = true;
            }
            bool environmentVersionValueAcquired = false;
            if (this.Session != null && this.Session.ContainsKey("EnvironmentVersion") && this.Session["EnvironmentVersion"] != null)
            {
                if ((typeof(System.String).IsAssignableFrom(this.Session["EnvironmentVersion"].GetType()) == false))
                {
                    this.Error("The type \'System.String\' of the parameter \'EnvironmentVersion\' did not match the type of the data passed to the template.");
                }
                else
                {
                    this._environmentVersionField = ((System.String)(this.Session["EnvironmentVersion"]));
                    environmentVersionValueAcquired = true;
                }
            }
            if ((environmentVersionValueAcquired == false))
            {
                this._environmentVersionField = default(System.String);
                environmentVersionValueAcquired = true;
            }
            bool basePathValueAcquired = false;
            if (this.Session != null && this.Session.ContainsKey("BasePath") && this.Session["BasePath"] != null)
            {
                if ((typeof(System.String).IsAssignableFrom(this.Session["BasePath"].GetType()) == false))
                {
                    this.Error("The type \'System.String\' of the parameter \'BasePath\' did not match the type of the data passed to the template.");
                }
                else
                {
                    this._basePathField = ((System.String)(this.Session["BasePath"]));
                    basePathValueAcquired = true;
                }
            }
            if ((basePathValueAcquired == false))
            {
                this._basePathField = default(System.String);
                basePathValueAcquired = true;
            }
            bool fileNamePrefixValueAcquired = false;
            if (this.Session != null && this.Session.ContainsKey("FileNamePrefix") && this.Session["FileNamePrefix"] != null)
            {
                if ((typeof(System.String).IsAssignableFrom(this.Session["FileNamePrefix"].GetType()) == false))
                {
                    this.Error("The type \'System.String\' of the parameter \'FileNamePrefix\' did not match the type of the data passed to the template.");
                }
                else
                {
                    this._fileNamePrefixField = ((System.String)(this.Session["FileNamePrefix"]));
                    fileNamePrefixValueAcquired = true;
                }
            }
            if ((fileNamePrefixValueAcquired == false))
            {
                this._fileNamePrefixField = default(System.String);
                fileNamePrefixValueAcquired = true;
            }
            bool fileNameSuffixValueAcquired = false;
            if (this.Session != null && this.Session.ContainsKey("FileNameSuffix") && this.Session["FileNameSuffix"] != null)
            {
                if ((typeof(System.String).IsAssignableFrom(this.Session["FileNameSuffix"].GetType()) == false))
                {
                    this.Error("The type \'System.String\' of the parameter \'FileNameSuffix\' did not match the type of the data passed to the template.");
                }
                else
                {
                    this._fileNameSuffixField = ((System.String)(this.Session["FileNameSuffix"]));
                    fileNameSuffixValueAcquired = true;
                }
            }
            if ((fileNameSuffixValueAcquired == false))
            {
                this._fileNameSuffixField = default(System.String);
                fileNameSuffixValueAcquired = true;
            }
            bool enableNullableContextValueAcquired = false;
            if (this.Session != null && this.Session.ContainsKey("EnableNullableContext") && this.Session["EnableNullableContext"] != null)
            {
                if ((typeof(System.Boolean).IsAssignableFrom(this.Session["EnableNullableContext"].GetType()) == false))
                {
                    this.Error("The type \'System.Boolean\' of the parameter \'EnableNullableContext\' did not match the type of the data passed to the template.");
                }
                else
                {
                    this._enableNullableContextField = ((System.Boolean)(this.Session["EnableNullableContext"]));
                    enableNullableContextValueAcquired = true;
                }
            }
            if ((enableNullableContextValueAcquired == false))
            {
                this._enableNullableContextField = default(System.Boolean);
                enableNullableContextValueAcquired = true;
            }
            ViewModel = GetViewModel(@"CSharpClassGenerator.ViewModel", Model) as CSharpClassGenerator_ViewModel;

        }

    }

    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public partial class CSharpClassGeneratorBase : ModelFramework.Generators.Shared.ModelFrameworkGeneratorBase
    {

        public bool ResolveObjectCodeTemplateFromMetadata(string templateName, string childTemplateName, Type childTemplateModelType, object model)
        {
            return ResolveFromMetadata(templateName, childTemplateName, childTemplateModelType, model, ModelFramework.Objects.MetadataNames.CodeTemplateName);
        }

        public bool ResolvePropertyGetterTemplateFromMetadata(string templateName, string childTemplateName, Type childTemplateModelType, object model)
        {
            return ResolveFromMetadata(templateName, childTemplateName, childTemplateModelType, model, ModelFramework.Objects.MetadataNames.PropertyGetterTemplateName);
        }

        public bool ResolvePropertySetterTemplateFromMetadata(string templateName, string childTemplateName, Type childTemplateModelType, object model)
        {
            return ResolveFromMetadata(templateName, childTemplateName, childTemplateModelType, model, ModelFramework.Objects.MetadataNames.PropertySetterTemplateName);
        }

        public bool ResolvePropertyInitializerTemplateFromMetadata(string templateName, string childTemplateName, Type childTemplateModelType, object model)
        {
            return ResolveFromMetadata(templateName, childTemplateName, childTemplateModelType, model, ModelFramework.Objects.MetadataNames.PropertyInitializerTemplateName);
        }

        public string GetTemplateName(object model)
        {
            if (model is IClassProperty)
            {
                return "CSharpClassGenerator.DefaultPropertyTemplate";
            }
            if (model is IClassMethod)
            {
                return "CSharpClassGenerator.DefaultMethodTemplate";
            }
            if (model is IClassConstructor)
            {
                return "CSharpClassGenerator.DefaultCtorTemplate";
            }
            if (model is IClassField)
            {
                return "CSharpClassGenerator.DefaultFieldTemplate";
            }
            if (model is IEnum)
            {
                return "CSharpClassGenerator.DefaultEnumTemplate";
            }
            return null;
        }


    }
    #endregion
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGeneratorBaseChild : CSharpClassGeneratorBase
    {
        public CSharpClassGenerator RootTemplate { get; set; }

        public override void Write(string textToAppend)
        {
            if (RootTemplate != null)
            {
                RootTemplate.Write(textToAppend);
            }
            else
            {
                base.Write(textToAppend);
            }
        }

        public override void WriteLine(string textToAppend)
        {
            if (RootTemplate != null)
            {
                RootTemplate.WriteLine(textToAppend);
            }
            else
            {
                base.WriteLine(textToAppend);
            }
        }
    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CommaAndNewLine : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            Write(this.ToStringHelper.ToStringWithCulture(@",
"));

            if (builder != null) this.GenerationEnvironment = backup;
        }


        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }

        }


    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CommaAndSpace : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            Write(this.ToStringHelper.ToStringWithCulture(@", "));

            if (builder != null) this.GenerationEnvironment = backup;
        }


        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }

        }


    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class NewLine : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            Write(this.ToStringHelper.ToStringWithCulture(@"
"));

            if (builder != null) this.GenerationEnvironment = backup;
        }


        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }

        }


    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultAttributeTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            Write(this.ToStringHelper.ToStringWithCulture(@"    "));
            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.Prefix));
            Write(this.ToStringHelper.ToStringWithCulture(@"["));
            Write(this.ToStringHelper.ToStringWithCulture(Model.Name));
            if (ViewModel.ShouldRenderParameters)
                         {

            Write(this.ToStringHelper.ToStringWithCulture(@"("));
            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.ParametersText));
            Write(this.ToStringHelper.ToStringWithCulture(@")"));
            }

            Write(this.ToStringHelper.ToStringWithCulture(@"]
"));

            if (builder != null) this.GenerationEnvironment = backup;
        }

        protected CSharpClassGenerator_DefaultAttributeViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        public CSharpClassGenerator_DefaultAttributeViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }

        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }
            ViewModel = GetViewModel(@"CSharpClassGenerator.DefaultAttributeViewModel", Model) as CSharpClassGenerator_DefaultAttributeViewModel;

        }

        public IAttribute Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultParameterAttributeTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            Write(this.ToStringHelper.ToStringWithCulture(@"["));
            Write(this.ToStringHelper.ToStringWithCulture(Model.Name));
            if (ViewModel.ShouldRenderParameters)
                     {

            Write(this.ToStringHelper.ToStringWithCulture(@"("));
            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.ParametersText));
            Write(this.ToStringHelper.ToStringWithCulture(@")"));
            }

            Write(this.ToStringHelper.ToStringWithCulture(@"]"));

            if (builder != null) this.GenerationEnvironment = backup;
        }

        protected CSharpClassGenerator_DefaultParameterAttributeViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        public CSharpClassGenerator_DefaultParameterAttributeViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }

        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }
            ViewModel = GetViewModel(@"CSharpClassGenerator.DefaultParameterAttributeViewModel", Model) as CSharpClassGenerator_DefaultParameterAttributeViewModel;

        }

        public IAttribute Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultClassTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            if (ViewModel.GenerateMultipleFiles)
   {
       this.GenerationEnvironment = ViewModel.StartNewFile();

            
            RenderChildTemplate(@"CSharpClassGenerator.CodeGenerationHeaderTemplate", ViewModel.Root, null, false, null, null, new CustomDelegates { });

            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultUsingsTemplate", ViewModel.Root.Model, false, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            Write(this.ToStringHelper.ToStringWithCulture(@"
"));
            Write(this.ToStringHelper.ToStringWithCulture(@"namespace "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.Namespace));
            Write(this.ToStringHelper.ToStringWithCulture(@"
{
"));
            }

            if (ViewModel.EnableNullableContext)
   {

            Write(this.ToStringHelper.ToStringWithCulture(@"#nullable enable
"));
            }

            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultAttributeTemplate", Model.Attributes, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            Write(this.ToStringHelper.ToStringWithCulture(@"    "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetModifiers()));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetContainerType()));
            Write(this.ToStringHelper.ToStringWithCulture(@" "));
            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.Name));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetGenericTypeArgumentsString()));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetInheritedClasses()));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetGenericTypeArgumentConstraintsString()));
            Write(this.ToStringHelper.ToStringWithCulture(@"
    {
"));
            
            RenderChildTemplate(null, ViewModel.SubItems, null, false, @"NewLine", null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, TemplateNameDelegate = GetTemplateName, });

            if (ViewModel.HasSubclasses)
        {
            if (ViewModel.SubItems.Any()) { WriteLine(""); }
            var childGen = ViewModel.CreateChildGenerator(RootTemplate);
            Write("    "); //fix indentation on first line
            childGen.Render(GenerationEnvironment);
            Write(RootTemplate.CurrentIndent);
        }

            Write(this.ToStringHelper.ToStringWithCulture(@"    }
"));
            if (ViewModel.EnableNullableContext)
   {

            Write(this.ToStringHelper.ToStringWithCulture(@"#nullable restore
"));
            }

            if (ViewModel.GenerateMultipleFiles)
   {

            Write(this.ToStringHelper.ToStringWithCulture(@"}
"));
            ViewModel.Root.ViewModel.TemplateFileManager.ResetToDefaultOutput(); 
   }


            if (builder != null) this.GenerationEnvironment = backup;
        }

        protected CSharpClassGenerator_DefaultClassViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        public CSharpClassGenerator_DefaultClassViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }

        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }
            ViewModel = GetViewModel(@"CSharpClassGenerator.DefaultClassViewModel", Model) as CSharpClassGenerator_DefaultClassViewModel;

        }

        public ITypeBase Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_CodeGenerationHeaderTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            if (Model.CreateCodeGenerationHeader) {

            Write(this.ToStringHelper.ToStringWithCulture(@"// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: "));
            Write(this.ToStringHelper.ToStringWithCulture(!string.IsNullOrEmpty(Model.EnvironmentVersion) ? Model.EnvironmentVersion : Environment.Version.ToString()));
            Write(this.ToStringHelper.ToStringWithCulture(@"
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
"));
            }


            if (builder != null) this.GenerationEnvironment = backup;
        }


        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }

        }

        public CSharpClassGenerator Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultCtorTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultAttributeTemplate", Model.Attributes, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            Write(this.ToStringHelper.ToStringWithCulture(@"        "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetModifiers()));
            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.Name));
            Write(this.ToStringHelper.ToStringWithCulture(@"("));
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultParameterTemplate", Model.Parameters, null, false, @"CommaAndSpace", null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            Write(this.ToStringHelper.ToStringWithCulture(@")"));
            if (ViewModel.ShouldRenderChainCall) {

            Write(this.ToStringHelper.ToStringWithCulture(@" : "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.ChainCall));
            }

            if (ViewModel.OmitCode) {

            Write(this.ToStringHelper.ToStringWithCulture(@";"));
            } else {

            Write(this.ToStringHelper.ToStringWithCulture(@"
"));
            Write(this.ToStringHelper.ToStringWithCulture(@"        {"));
            WriteLine(""); if (ViewModel.ShouldRenderCodeStatements) {

            RootTemplate.PushIndent("            ");

            
            RenderChildTemplate(null, Model.CodeStatements, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, RenderChildTemplateDelegate = RenderModel, });

            RootTemplate.PopIndent();

            }

            Write(this.ToStringHelper.ToStringWithCulture(@"        }"));
            }

            Write(this.ToStringHelper.ToStringWithCulture(@"
"));

            if (builder != null) this.GenerationEnvironment = backup;
        }

        protected CSharpClassGenerator_DefaultCtorViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        public CSharpClassGenerator_DefaultCtorViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }

        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }
            ViewModel = GetViewModel(@"CSharpClassGenerator.DefaultCtorViewModel", Model) as CSharpClassGenerator_DefaultCtorViewModel;

        }

        public IClassConstructor Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultEnumMemberTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultAttributeTemplate", Model.Attributes, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            Write(this.ToStringHelper.ToStringWithCulture(@"            "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.Name.Sanitize().GetCsharpFriendlyName()));
            if (Model.Value != null) {

            Write(this.ToStringHelper.ToStringWithCulture(@" = "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.Value.CsharpFormat()));
            }


            if (builder != null) this.GenerationEnvironment = backup;
        }


        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }

        }

        public IEnumMember Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultEnumTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultAttributeTemplate", Model.Attributes, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            Write(this.ToStringHelper.ToStringWithCulture(@"        "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetModifiers()));
            Write(this.ToStringHelper.ToStringWithCulture(@"enum "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.Name.Sanitize().GetCsharpFriendlyName()));
            Write(this.ToStringHelper.ToStringWithCulture(@"
        {
"));
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultEnumMemberTemplate", Model.Members, null, false, @"CommaAndNewLine", null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            Write(this.ToStringHelper.ToStringWithCulture(@"
"));
            Write(this.ToStringHelper.ToStringWithCulture(@"        }
"));

            if (builder != null) this.GenerationEnvironment = backup;
        }


        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }

        }

        public IEnum Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultFieldTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultAttributeTemplate", Model.Attributes, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            Write(this.ToStringHelper.ToStringWithCulture(@"        "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetModifiers()));
            if (Model.Event) Write("event ");

            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.TypeName));
            Write(this.ToStringHelper.ToStringWithCulture(@" "));
            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.Name));
            if (ViewModel.ShouldRenderDefaultValue) {

            Write(this.ToStringHelper.ToStringWithCulture(@" = "));
            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.DefaultValue));
            }

            Write(this.ToStringHelper.ToStringWithCulture(@";
"));

            if (builder != null) this.GenerationEnvironment = backup;
        }

        protected CSharpClassGenerator_DefaultFieldViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        public CSharpClassGenerator_DefaultFieldViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }

        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }
            ViewModel = GetViewModel(@"CSharpClassGenerator.DefaultFieldViewModel", Model) as CSharpClassGenerator_DefaultFieldViewModel;

        }

        public IClassField Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultMethodTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultAttributeTemplate", Model.Attributes, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            Write(this.ToStringHelper.ToStringWithCulture(@"        "));
            if (ViewModel.ShouldRenderModifiers) {

            Write(this.ToStringHelper.ToStringWithCulture(Model.GetModifiers()));
            }

            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.ReturnTypeName));
            Write(this.ToStringHelper.ToStringWithCulture(@" "));
            if (ViewModel.ShouldRenderExplicitInterfaceName) {

            Write(this.ToStringHelper.ToStringWithCulture(Model.ExplicitInterfaceName));
            Write(this.ToStringHelper.ToStringWithCulture(@"."));
            }

            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.Name));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetGenericTypeArgumentsString()));
            Write(this.ToStringHelper.ToStringWithCulture(@"("));
            if (Model.ExtensionMethod) {

            Write(this.ToStringHelper.ToStringWithCulture(@"this "));
            }

            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultParameterTemplate", Model.Parameters, null, false, @"CommaAndSpace", null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            Write(this.ToStringHelper.ToStringWithCulture(@")"));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetGenericTypeArgumentConstraintsString()));
            if (ViewModel.OmitCode) {

            Write(this.ToStringHelper.ToStringWithCulture(@";"));
            } else {

            Write(this.ToStringHelper.ToStringWithCulture(@"
"));
            Write(this.ToStringHelper.ToStringWithCulture(@"        {"));
            WriteLine("");if (ViewModel.ShouldRenderCodeStatements) {

            RootTemplate.PushIndent("            ");

            
            RenderChildTemplate(null, Model.CodeStatements, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, RenderChildTemplateDelegate = RenderModel, });

            RootTemplate.PopIndent();

            }

            Write(this.ToStringHelper.ToStringWithCulture(@"        }"));
            }

            Write(this.ToStringHelper.ToStringWithCulture(@"
"));

            if (builder != null) this.GenerationEnvironment = backup;
        }

        protected CSharpClassGenerator_DefaultMethodViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        public CSharpClassGenerator_DefaultMethodViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }

        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }
            ViewModel = GetViewModel(@"CSharpClassGenerator.DefaultMethodViewModel", Model) as CSharpClassGenerator_DefaultMethodViewModel;

        }

        public IClassMethod Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultParameterTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultParameterAttributeTemplate", Model.Attributes, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });

            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultParameterValueTemplate", Model, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, });


            if (builder != null) this.GenerationEnvironment = backup;
        }


        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }

        }

        public IParameter Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultParameterValueTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            if (Model.IsParamArray) {

            Write(this.ToStringHelper.ToStringWithCulture(@"params "));
            }

            if (Model.IsRef) {

            Write(this.ToStringHelper.ToStringWithCulture(@"ref "));
            }

            if (Model.IsOut) {

            Write(this.ToStringHelper.ToStringWithCulture(@"out "));
            }

            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.TypeName));
            Write(this.ToStringHelper.ToStringWithCulture(@" "));
            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.Name));
            if (ViewModel.ShouldRenderDefaultValue) {

            Write(this.ToStringHelper.ToStringWithCulture(@" = "));
            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.DefaultValue));
            }


            if (builder != null) this.GenerationEnvironment = backup;
        }

        protected CSharpClassGenerator_DefaultParameterViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        public CSharpClassGenerator_DefaultParameterViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }

        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }
            ViewModel = GetViewModel(@"CSharpClassGenerator.DefaultParameterViewModel", Model) as CSharpClassGenerator_DefaultParameterViewModel;

        }

        public IParameter Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultPropertyGetterBodyTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            if (!Model.GetterCodeStatements.Any() || TemplateContext.GetModelFromContextByType<ITypeBase>() is IInterface)
   {

            Write(this.ToStringHelper.ToStringWithCulture(@"get;
"));
            }
   else
   {

            Write(this.ToStringHelper.ToStringWithCulture(@"get
            {"));
            WriteLine(""); if (Model.GetterCodeStatements.Any()) {

            RootTemplate.PushIndent("                ");

            
            RenderChildTemplate(null, Model.GetterCodeStatements, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, RenderChildTemplateDelegate = RenderModel, });

            RootTemplate.PopIndent();

            }

            Write(this.ToStringHelper.ToStringWithCulture(@"            }
"));
            }


            if (builder != null) this.GenerationEnvironment = backup;
        }


        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }

        }

        public IClassProperty Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultPropertyInitializerBodyTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            if (!Model.InitializerCodeStatements.Any() || TemplateContext.GetModelFromContextByType<ITypeBase>() is IInterface)
   {

            Write(this.ToStringHelper.ToStringWithCulture(@"init;
"));
            }
   else
   {

            Write(this.ToStringHelper.ToStringWithCulture(@"init
            {"));
            WriteLine(""); if (Model.InitializerCodeStatements.Any()) {

            RootTemplate.PushIndent("                ");

            
            RenderChildTemplate(null, Model.InitializerCodeStatements, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, RenderChildTemplateDelegate = RenderModel, });

            RootTemplate.PopIndent();

            }

            Write(this.ToStringHelper.ToStringWithCulture(@"            }
"));
            }


            if (builder != null) this.GenerationEnvironment = backup;
        }


        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }

        }

        public IClassProperty Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultPropertySetterBodyTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            if (!Model.SetterCodeStatements.Any() || TemplateContext.GetModelFromContextByType<ITypeBase>() is IInterface)
   {

            Write(this.ToStringHelper.ToStringWithCulture(@"set;
"));
            }
   else
   {

            Write(this.ToStringHelper.ToStringWithCulture(@"set
            {"));
            WriteLine(""); if (Model.SetterCodeStatements.Any()) {

            RootTemplate.PushIndent("                ");

            
            RenderChildTemplate(null, Model.SetterCodeStatements, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolveFromMetadata, RenderChildTemplateDelegate = RenderModel, });

            RootTemplate.PopIndent();

            }

            Write(this.ToStringHelper.ToStringWithCulture(@"            }
"));
            }


            if (builder != null) this.GenerationEnvironment = backup;
        }


        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }

        }

        public IClassProperty Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultPropertyTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultAttributeTemplate", Model.Attributes, null, false, null, null, new CustomDelegates { });

            Write(this.ToStringHelper.ToStringWithCulture(@"        "));
            if (ViewModel.ShouldRenderModifiers) {

            Write(this.ToStringHelper.ToStringWithCulture(Model.GetModifiers()));
            }

            if (ViewModel.ShouldRenderExplicitInterfaceName) {

            Write(this.ToStringHelper.ToStringWithCulture(Model.ExplicitInterfaceName));
            Write(this.ToStringHelper.ToStringWithCulture(@"."));
            }

            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.TypeName));
            Write(this.ToStringHelper.ToStringWithCulture(@" "));
            Write(this.ToStringHelper.ToStringWithCulture(ViewModel.Name));
            Write(this.ToStringHelper.ToStringWithCulture(@"
        {
"));
            if (Model.HasGetter) {

            Write(this.ToStringHelper.ToStringWithCulture(@"            "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetGetterModifiers()));
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultPropertyGetterBodyTemplate", Model, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolvePropertyGetterTemplateFromMetadata, });

            }

            if (Model.HasSetter) {

            Write(this.ToStringHelper.ToStringWithCulture(@"            "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetSetterModifiers()));
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultPropertySetterBodyTemplate", Model, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolvePropertySetterTemplateFromMetadata, });

            }

            if (Model.HasInitializer) {

            Write(this.ToStringHelper.ToStringWithCulture(@"            "));
            Write(this.ToStringHelper.ToStringWithCulture(Model.GetInitializerModifiers()));
            
            RenderChildTemplate(@"CSharpClassGenerator.DefaultPropertyInitializerBodyTemplate", Model, null, false, null, null, new CustomDelegates { ResolverDelegate = ResolvePropertyInitializerTemplateFromMetadata, });

            }

            Write(this.ToStringHelper.ToStringWithCulture(@"        }
"));

            if (builder != null) this.GenerationEnvironment = backup;
        }

        protected CSharpClassGenerator_DefaultPropertyViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        public CSharpClassGenerator_DefaultPropertyViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }

        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }
            ViewModel = GetViewModel(@"CSharpClassGenerator.DefaultPropertyViewModel", Model) as CSharpClassGenerator_DefaultPropertyViewModel;

        }

        public IClassProperty Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultUsingsTemplate : CSharpClassGeneratorBaseChild
    {
        public virtual void Render(global::System.Text.StringBuilder builder)
        {
            var backup = this.GenerationEnvironment;
            if (builder != null) this.GenerationEnvironment = builder;
            foreach (var item in ViewModel.Usings)
   {

            Write(this.ToStringHelper.ToStringWithCulture(@"using "));
            Write(this.ToStringHelper.ToStringWithCulture(item));
            Write(this.ToStringHelper.ToStringWithCulture(@";
"));
            }


            if (builder != null) this.GenerationEnvironment = backup;
        }

        protected CSharpClassGenerator_DefaultUsingsViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        public CSharpClassGenerator_DefaultUsingsViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }

        public virtual void Initialize(global::System.Action additionalActionDelegate = null)
        {
            this.Errors.Clear();
            this.GenerationEnvironment.Clear();
            if (Session == null)
            {
                Session = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            if (RootTemplate != null)
            {
                ChildTemplates = RootTemplate.ChildTemplates;
                ViewModels = RootTemplate.ViewModels;
            }
            else
            {
                ChildTemplates.Clear();
                ViewModels.Clear();
            }
            if (RootTemplate != null)
            {
                PlaceholderChildrenDictionary = RootTemplate.PlaceholderChildrenDictionary;
            }
            else
            {
                PlaceholderChildrenDictionary.Clear();
            }
            ViewModel = GetViewModel(@"CSharpClassGenerator.DefaultUsingsViewModel", Model) as CSharpClassGenerator_DefaultUsingsViewModel;

        }

        public IEnumerable<ITypeBase> Model { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_ViewModel
    {
        [global::System.ComponentModel.Browsable(false)]
        public System.Collections.Generic.IEnumerable<ModelFramework.Objects.Contracts.ITypeBase> Model { get; set; }
        protected System.Boolean _createCodeGenerationHeaderField;

        /// <summary>
        /// Access the CreateCodeGenerationHeader parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean CreateCodeGenerationHeader
        {
            get
            {
                return this._createCodeGenerationHeaderField;
            }
            set
            {
                 this._createCodeGenerationHeaderField = value;
            }
        }
        protected System.Boolean _generateMultipleFilesField;

        /// <summary>
        /// Access the GenerateMultipleFiles parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean GenerateMultipleFiles
        {
            get
            {
                return this._generateMultipleFilesField;
            }
            set
            {
                 this._generateMultipleFilesField = value;
            }
        }
        protected System.Boolean _skipWhenFileExistsField;

        /// <summary>
        /// Access the SkipWhenFileExists parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean SkipWhenFileExists
        {
            get
            {
                return this._skipWhenFileExistsField;
            }
            set
            {
                 this._skipWhenFileExistsField = value;
            }
        }
        protected System.String _environmentVersionField;

        /// <summary>
        /// Access the EnvironmentVersion parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String EnvironmentVersion
        {
            get
            {
                return this._environmentVersionField;
            }
            set
            {
                 this._environmentVersionField = value;
            }
        }
        protected System.String _basePathField;

        /// <summary>
        /// Access the BasePath parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String BasePath
        {
            get
            {
                return this._basePathField;
            }
            set
            {
                 this._basePathField = value;
            }
        }
        protected System.String _fileNamePrefixField;

        /// <summary>
        /// Access the FileNamePrefix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNamePrefix
        {
            get
            {
                return this._fileNamePrefixField;
            }
            set
            {
                 this._fileNamePrefixField = value;
            }
        }
        protected System.String _fileNameSuffixField;

        /// <summary>
        /// Access the FileNameSuffix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNameSuffix
        {
            get
            {
                return this._fileNameSuffixField;
            }
            set
            {
                 this._fileNameSuffixField = value;
            }
        }
        protected System.Boolean _enableNullableContextField;

        /// <summary>
        /// Access the EnableNullableContext parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean EnableNullableContext
        {
            get
            {
                return this._enableNullableContextField;
            }
            set
            {
                 this._enableNullableContextField = value;
            }
        }
        public IEnumerable<string> Namespaces
            => Model.DefaultWhenNull()
                    .Select(typeBase => typeBase.Namespace.WhenNullOrEmpty("GeneratedNamespace"))
                    .Distinct()
                    .OrderBy(ns => ns);

        public IEnumerable<ITypeBase> GetClassesByNamespace(string ns)
            => Model.Where(typeBase => typeBase.Namespace.WhenNullOrEmpty("GeneratedNamespace") == ns)
                    .OrderBy(typeBase => typeBase.Name);

        public TemplateFileManager TemplateFileManager { get; internal set; }


    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultAttributeViewModel
    {
        [global::System.ComponentModel.Browsable(false)]
        public IAttribute Model { get; set; }
        protected System.Boolean _createCodeGenerationHeaderField;

        /// <summary>
        /// Access the CreateCodeGenerationHeader parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean CreateCodeGenerationHeader
        {
            get
            {
                return this._createCodeGenerationHeaderField;
            }
            set
            {
                 this._createCodeGenerationHeaderField = value;
            }
        }
        protected System.Boolean _generateMultipleFilesField;

        /// <summary>
        /// Access the GenerateMultipleFiles parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean GenerateMultipleFiles
        {
            get
            {
                return this._generateMultipleFilesField;
            }
            set
            {
                 this._generateMultipleFilesField = value;
            }
        }
        protected System.Boolean _skipWhenFileExistsField;

        /// <summary>
        /// Access the SkipWhenFileExists parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean SkipWhenFileExists
        {
            get
            {
                return this._skipWhenFileExistsField;
            }
            set
            {
                 this._skipWhenFileExistsField = value;
            }
        }
        protected System.String _environmentVersionField;

        /// <summary>
        /// Access the EnvironmentVersion parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String EnvironmentVersion
        {
            get
            {
                return this._environmentVersionField;
            }
            set
            {
                 this._environmentVersionField = value;
            }
        }
        protected System.String _basePathField;

        /// <summary>
        /// Access the BasePath parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String BasePath
        {
            get
            {
                return this._basePathField;
            }
            set
            {
                 this._basePathField = value;
            }
        }
        protected System.String _fileNamePrefixField;

        /// <summary>
        /// Access the FileNamePrefix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNamePrefix
        {
            get
            {
                return this._fileNamePrefixField;
            }
            set
            {
                 this._fileNamePrefixField = value;
            }
        }
        protected System.String _fileNameSuffixField;

        /// <summary>
        /// Access the FileNameSuffix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNameSuffix
        {
            get
            {
                return this._fileNameSuffixField;
            }
            set
            {
                 this._fileNameSuffixField = value;
            }
        }
        protected System.Boolean _enableNullableContextField;

        /// <summary>
        /// Access the EnableNullableContext parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean EnableNullableContext
        {
            get
            {
                return this._enableNullableContextField;
            }
            set
            {
                 this._enableNullableContextField = value;
            }
        }
        protected CSharpClassGenerator_ViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public CSharpClassGenerator_ViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }
        public string Prefix
        => !(TemplateContext.ParentContext != null && TemplateContext.ParentContext.Model is ITypeBase)
            ? "    "
            : string.Empty;
    public bool ShouldRenderParameters => Model.Parameters != null && Model.Parameters.Any();
    public string ParametersText => string.Join(", ", Model.Parameters.Select(p =>
        string.IsNullOrEmpty(p.Name)
            ? p.Value.CsharpFormat()
            : string.Format("{0} = {1}", p.Name, p.Value.CsharpFormat())
        ));

        public TemplateInstanceContext TemplateContext { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultParameterAttributeViewModel
    {
        [global::System.ComponentModel.Browsable(false)]
        public IAttribute Model { get; set; }
        protected System.Boolean _createCodeGenerationHeaderField;

        /// <summary>
        /// Access the CreateCodeGenerationHeader parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean CreateCodeGenerationHeader
        {
            get
            {
                return this._createCodeGenerationHeaderField;
            }
            set
            {
                 this._createCodeGenerationHeaderField = value;
            }
        }
        protected System.Boolean _generateMultipleFilesField;

        /// <summary>
        /// Access the GenerateMultipleFiles parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean GenerateMultipleFiles
        {
            get
            {
                return this._generateMultipleFilesField;
            }
            set
            {
                 this._generateMultipleFilesField = value;
            }
        }
        protected System.Boolean _skipWhenFileExistsField;

        /// <summary>
        /// Access the SkipWhenFileExists parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean SkipWhenFileExists
        {
            get
            {
                return this._skipWhenFileExistsField;
            }
            set
            {
                 this._skipWhenFileExistsField = value;
            }
        }
        protected System.String _environmentVersionField;

        /// <summary>
        /// Access the EnvironmentVersion parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String EnvironmentVersion
        {
            get
            {
                return this._environmentVersionField;
            }
            set
            {
                 this._environmentVersionField = value;
            }
        }
        protected System.String _basePathField;

        /// <summary>
        /// Access the BasePath parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String BasePath
        {
            get
            {
                return this._basePathField;
            }
            set
            {
                 this._basePathField = value;
            }
        }
        protected System.String _fileNamePrefixField;

        /// <summary>
        /// Access the FileNamePrefix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNamePrefix
        {
            get
            {
                return this._fileNamePrefixField;
            }
            set
            {
                 this._fileNamePrefixField = value;
            }
        }
        protected System.String _fileNameSuffixField;

        /// <summary>
        /// Access the FileNameSuffix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNameSuffix
        {
            get
            {
                return this._fileNameSuffixField;
            }
            set
            {
                 this._fileNameSuffixField = value;
            }
        }
        protected System.Boolean _enableNullableContextField;

        /// <summary>
        /// Access the EnableNullableContext parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean EnableNullableContext
        {
            get
            {
                return this._enableNullableContextField;
            }
            set
            {
                 this._enableNullableContextField = value;
            }
        }
        protected CSharpClassGenerator_ViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public CSharpClassGenerator_ViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }
        public bool ShouldRenderParameters => Model.Parameters != null && Model.Parameters.Any();
    public string ParametersText => string.Join(", ", Model.Parameters.Select(p =>
        string.IsNullOrEmpty(p.Name)
            ? p.Value.CsharpFormat()
            : string.Format("{0} = {1}", p.Name, p.Value.CsharpFormat())
        ));

        public TemplateInstanceContext TemplateContext { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultClassViewModel
    {
        [global::System.ComponentModel.Browsable(false)]
        public ITypeBase Model { get; set; }
        public CSharpClassGenerator Root => TemplateContext.GetContextByType<CSharpClassGenerator>();
    public bool GenerateMultipleFiles => Root.GenerateMultipleFiles;
    public bool SkipWhenFileExists => Root.SkipWhenFileExists;
    public IClass Class => Model as IClass;
    public bool EnableNullableContext => Root.EnableNullableContext && Root.CreateCodeGenerationHeader;
    public string Name => Model.Name.Sanitize().GetCsharpFriendlyName();
    public bool HasSubclasses
    {
        get
        {
            var cls = Class;
            return cls != null && cls.SubClasses != null && cls.SubClasses.Any();
        }
    }
    public IEnumerable<object> SubItems
    {
        get
        {
            var cls = Class;
            return cls == null
                ? Model.Properties.Cast<object>().Concat(Model.Methods)
                : Model.Properties.Cast<object>().Concat(Model.Methods).Concat(cls.Constructors).Concat(cls.Fields).Concat(cls.Enums);
        }
    }
    public StringBuilder StartNewFile()
        => Root.ViewModel.TemplateFileManager.StartNewFile((Root.FileNamePrefix ?? string.Empty) + Model.Name + (Root.FileNameSuffix ?? string.Empty) + ".cs", SkipWhenFileExists);
    public CSharpClassGenerator CreateChildGenerator(CSharpClassGeneratorBase rootTemplate)
    {
        if (!HasSubclasses)
        {
            throw new InvalidOperationException("Cannot create a child generator on an interface or on a class without subclasses");
        }
        var childGen = new CSharpClassGenerator
        {
            Session = new Dictionary<string, object>
            {
                {
                    nameof(CSharpClassGenerator.Model), Class.SubClasses
                }
            }
        };
        childGen.Initialize();
        childGen.TemplateContext = TemplateContext.CreateChildContext(childGen, Class.SubClasses);
        childGen.PushIndent(rootTemplate.CurrentIndent + "    ");
        return childGen;
    }

        public TemplateInstanceContext TemplateContext { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultCtorViewModel
    {
        [global::System.ComponentModel.Browsable(false)]
        public IClassConstructor Model { get; set; }
        protected System.Boolean _createCodeGenerationHeaderField;

        /// <summary>
        /// Access the CreateCodeGenerationHeader parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean CreateCodeGenerationHeader
        {
            get
            {
                return this._createCodeGenerationHeaderField;
            }
            set
            {
                 this._createCodeGenerationHeaderField = value;
            }
        }
        protected System.Boolean _generateMultipleFilesField;

        /// <summary>
        /// Access the GenerateMultipleFiles parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean GenerateMultipleFiles
        {
            get
            {
                return this._generateMultipleFilesField;
            }
            set
            {
                 this._generateMultipleFilesField = value;
            }
        }
        protected System.Boolean _skipWhenFileExistsField;

        /// <summary>
        /// Access the SkipWhenFileExists parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean SkipWhenFileExists
        {
            get
            {
                return this._skipWhenFileExistsField;
            }
            set
            {
                 this._skipWhenFileExistsField = value;
            }
        }
        protected System.String _environmentVersionField;

        /// <summary>
        /// Access the EnvironmentVersion parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String EnvironmentVersion
        {
            get
            {
                return this._environmentVersionField;
            }
            set
            {
                 this._environmentVersionField = value;
            }
        }
        protected System.String _basePathField;

        /// <summary>
        /// Access the BasePath parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String BasePath
        {
            get
            {
                return this._basePathField;
            }
            set
            {
                 this._basePathField = value;
            }
        }
        protected System.String _fileNamePrefixField;

        /// <summary>
        /// Access the FileNamePrefix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNamePrefix
        {
            get
            {
                return this._fileNamePrefixField;
            }
            set
            {
                 this._fileNamePrefixField = value;
            }
        }
        protected System.String _fileNameSuffixField;

        /// <summary>
        /// Access the FileNameSuffix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNameSuffix
        {
            get
            {
                return this._fileNameSuffixField;
            }
            set
            {
                 this._fileNameSuffixField = value;
            }
        }
        protected System.Boolean _enableNullableContextField;

        /// <summary>
        /// Access the EnableNullableContext parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean EnableNullableContext
        {
            get
            {
                return this._enableNullableContextField;
            }
            set
            {
                 this._enableNullableContextField = value;
            }
        }
        protected CSharpClassGenerator_ViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public CSharpClassGenerator_ViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }
        public string Name => TemplateContext.GetModelFromContextByType<ITypeBase>().Name.Sanitize().GetCsharpFriendlyName();
    public bool ShouldRenderChainCall => !string.IsNullOrEmpty(Model.ChainCall);
    public bool OmitCode => TemplateContext.GetModelFromContextByType<ITypeBase>() is IInterface || Model.Abstract;
    public bool ShouldRenderCodeStatements => Model.CodeStatements.Any();

        public TemplateInstanceContext TemplateContext { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultFieldViewModel
    {
        [global::System.ComponentModel.Browsable(false)]
        public IClassField Model { get; set; }
        protected System.Boolean _createCodeGenerationHeaderField;

        /// <summary>
        /// Access the CreateCodeGenerationHeader parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean CreateCodeGenerationHeader
        {
            get
            {
                return this._createCodeGenerationHeaderField;
            }
            set
            {
                 this._createCodeGenerationHeaderField = value;
            }
        }
        protected System.Boolean _generateMultipleFilesField;

        /// <summary>
        /// Access the GenerateMultipleFiles parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean GenerateMultipleFiles
        {
            get
            {
                return this._generateMultipleFilesField;
            }
            set
            {
                 this._generateMultipleFilesField = value;
            }
        }
        protected System.Boolean _skipWhenFileExistsField;

        /// <summary>
        /// Access the SkipWhenFileExists parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean SkipWhenFileExists
        {
            get
            {
                return this._skipWhenFileExistsField;
            }
            set
            {
                 this._skipWhenFileExistsField = value;
            }
        }
        protected System.String _environmentVersionField;

        /// <summary>
        /// Access the EnvironmentVersion parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String EnvironmentVersion
        {
            get
            {
                return this._environmentVersionField;
            }
            set
            {
                 this._environmentVersionField = value;
            }
        }
        protected System.String _basePathField;

        /// <summary>
        /// Access the BasePath parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String BasePath
        {
            get
            {
                return this._basePathField;
            }
            set
            {
                 this._basePathField = value;
            }
        }
        protected System.String _fileNamePrefixField;

        /// <summary>
        /// Access the FileNamePrefix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNamePrefix
        {
            get
            {
                return this._fileNamePrefixField;
            }
            set
            {
                 this._fileNamePrefixField = value;
            }
        }
        protected System.String _fileNameSuffixField;

        /// <summary>
        /// Access the FileNameSuffix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNameSuffix
        {
            get
            {
                return this._fileNameSuffixField;
            }
            set
            {
                 this._fileNameSuffixField = value;
            }
        }
        protected System.Boolean _enableNullableContextField;

        /// <summary>
        /// Access the EnableNullableContext parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean EnableNullableContext
        {
            get
            {
                return this._enableNullableContextField;
            }
            set
            {
                 this._enableNullableContextField = value;
            }
        }
        protected CSharpClassGenerator_ViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public CSharpClassGenerator_ViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }
        public string TypeName => Model.TypeName.GetCsharpFriendlyTypeName()
                                            .AppendNullableAnnotation(Model, TemplateContext.GetContextByType<CSharpClassGenerator>().EnableNullableContext)
                                            .AbbreviateNamespaces(TemplateContext.GetModelFromContextByType<ITypeBase>().GetNamespacesToAbbreviate());
    public string Name => Model.Name.Sanitize().GetCsharpFriendlyName();
    public bool ShouldRenderDefaultValue => Model.DefaultValue != null;
    public string DefaultValue => Model.DefaultValue.CsharpFormat();

        public TemplateInstanceContext TemplateContext { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultMethodViewModel
    {
        [global::System.ComponentModel.Browsable(false)]
        public IClassMethod Model { get; set; }
        protected System.Boolean _createCodeGenerationHeaderField;

        /// <summary>
        /// Access the CreateCodeGenerationHeader parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean CreateCodeGenerationHeader
        {
            get
            {
                return this._createCodeGenerationHeaderField;
            }
            set
            {
                 this._createCodeGenerationHeaderField = value;
            }
        }
        protected System.Boolean _generateMultipleFilesField;

        /// <summary>
        /// Access the GenerateMultipleFiles parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean GenerateMultipleFiles
        {
            get
            {
                return this._generateMultipleFilesField;
            }
            set
            {
                 this._generateMultipleFilesField = value;
            }
        }
        protected System.Boolean _skipWhenFileExistsField;

        /// <summary>
        /// Access the SkipWhenFileExists parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean SkipWhenFileExists
        {
            get
            {
                return this._skipWhenFileExistsField;
            }
            set
            {
                 this._skipWhenFileExistsField = value;
            }
        }
        protected System.String _environmentVersionField;

        /// <summary>
        /// Access the EnvironmentVersion parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String EnvironmentVersion
        {
            get
            {
                return this._environmentVersionField;
            }
            set
            {
                 this._environmentVersionField = value;
            }
        }
        protected System.String _basePathField;

        /// <summary>
        /// Access the BasePath parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String BasePath
        {
            get
            {
                return this._basePathField;
            }
            set
            {
                 this._basePathField = value;
            }
        }
        protected System.String _fileNamePrefixField;

        /// <summary>
        /// Access the FileNamePrefix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNamePrefix
        {
            get
            {
                return this._fileNamePrefixField;
            }
            set
            {
                 this._fileNamePrefixField = value;
            }
        }
        protected System.String _fileNameSuffixField;

        /// <summary>
        /// Access the FileNameSuffix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNameSuffix
        {
            get
            {
                return this._fileNameSuffixField;
            }
            set
            {
                 this._fileNameSuffixField = value;
            }
        }
        protected System.Boolean _enableNullableContextField;

        /// <summary>
        /// Access the EnableNullableContext parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean EnableNullableContext
        {
            get
            {
                return this._enableNullableContextField;
            }
            set
            {
                 this._enableNullableContextField = value;
            }
        }
        protected CSharpClassGenerator_ViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public CSharpClassGenerator_ViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }
        public bool ShouldRenderModifiers => string.IsNullOrEmpty(Model.ExplicitInterfaceName) && !(TemplateContext.GetModelFromContextByType<ITypeBase>() is IInterface);
    public string ReturnTypeName => Model.TypeName.GetCsharpFriendlyTypeName().AppendNullableAnnotation(Model, TemplateContext.GetContextByType<CSharpClassGenerator>().EnableNullableContext).AbbreviateNamespaces(TemplateContext.GetModelFromContextByType<ITypeBase>().GetNamespacesToAbbreviate()).WhenNullOrEmpty("void");
    public bool ShouldRenderExplicitInterfaceName => !string.IsNullOrEmpty(Model.ExplicitInterfaceName) && !(TemplateContext.GetModelFromContextByType<ITypeBase>() is IInterface);
    public string Name => Model.Operator
        ? "operator " + Model.Name
        : Model.IsInterfaceMethod()
            ? Model.Name.RemoveInterfacePrefix().Sanitize().GetCsharpFriendlyName()
            : Model.Name.Sanitize().GetCsharpFriendlyName();
    public bool OmitCode => TemplateContext.GetModelFromContextByType<ITypeBase>() is IInterface || Model.Abstract;
    public bool ShouldRenderCodeStatements => Model.CodeStatements.Any();

        public TemplateInstanceContext TemplateContext { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultParameterViewModel
    {
        [global::System.ComponentModel.Browsable(false)]
        public IParameter Model { get; set; }
        protected System.Boolean _createCodeGenerationHeaderField;

        /// <summary>
        /// Access the CreateCodeGenerationHeader parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean CreateCodeGenerationHeader
        {
            get
            {
                return this._createCodeGenerationHeaderField;
            }
            set
            {
                 this._createCodeGenerationHeaderField = value;
            }
        }
        protected System.Boolean _generateMultipleFilesField;

        /// <summary>
        /// Access the GenerateMultipleFiles parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean GenerateMultipleFiles
        {
            get
            {
                return this._generateMultipleFilesField;
            }
            set
            {
                 this._generateMultipleFilesField = value;
            }
        }
        protected System.Boolean _skipWhenFileExistsField;

        /// <summary>
        /// Access the SkipWhenFileExists parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean SkipWhenFileExists
        {
            get
            {
                return this._skipWhenFileExistsField;
            }
            set
            {
                 this._skipWhenFileExistsField = value;
            }
        }
        protected System.String _environmentVersionField;

        /// <summary>
        /// Access the EnvironmentVersion parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String EnvironmentVersion
        {
            get
            {
                return this._environmentVersionField;
            }
            set
            {
                 this._environmentVersionField = value;
            }
        }
        protected System.String _basePathField;

        /// <summary>
        /// Access the BasePath parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String BasePath
        {
            get
            {
                return this._basePathField;
            }
            set
            {
                 this._basePathField = value;
            }
        }
        protected System.String _fileNamePrefixField;

        /// <summary>
        /// Access the FileNamePrefix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNamePrefix
        {
            get
            {
                return this._fileNamePrefixField;
            }
            set
            {
                 this._fileNamePrefixField = value;
            }
        }
        protected System.String _fileNameSuffixField;

        /// <summary>
        /// Access the FileNameSuffix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNameSuffix
        {
            get
            {
                return this._fileNameSuffixField;
            }
            set
            {
                 this._fileNameSuffixField = value;
            }
        }
        protected System.Boolean _enableNullableContextField;

        /// <summary>
        /// Access the EnableNullableContext parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean EnableNullableContext
        {
            get
            {
                return this._enableNullableContextField;
            }
            set
            {
                 this._enableNullableContextField = value;
            }
        }
        protected CSharpClassGenerator_ViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public CSharpClassGenerator_ViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }
        public string TypeName => Model.TypeName.GetCsharpFriendlyTypeName()
                                            .AppendNullableAnnotation(Model, TemplateContext.GetContextByType<CSharpClassGenerator>().EnableNullableContext)
                                            .AbbreviateNamespaces(TemplateContext.GetModelFromContextByType<ITypeBase>().GetNamespacesToAbbreviate());
    public string Name => Model.Name.Sanitize().GetCsharpFriendlyName();
    public bool ShouldRenderDefaultValue => Model.DefaultValue != null;
    public string DefaultValue => Model.DefaultValue.CsharpFormat();

        public TemplateInstanceContext TemplateContext { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultPropertyViewModel
    {
        [global::System.ComponentModel.Browsable(false)]
        public IClassProperty Model { get; set; }
        protected System.Boolean _createCodeGenerationHeaderField;

        /// <summary>
        /// Access the CreateCodeGenerationHeader parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean CreateCodeGenerationHeader
        {
            get
            {
                return this._createCodeGenerationHeaderField;
            }
            set
            {
                 this._createCodeGenerationHeaderField = value;
            }
        }
        protected System.Boolean _generateMultipleFilesField;

        /// <summary>
        /// Access the GenerateMultipleFiles parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean GenerateMultipleFiles
        {
            get
            {
                return this._generateMultipleFilesField;
            }
            set
            {
                 this._generateMultipleFilesField = value;
            }
        }
        protected System.Boolean _skipWhenFileExistsField;

        /// <summary>
        /// Access the SkipWhenFileExists parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean SkipWhenFileExists
        {
            get
            {
                return this._skipWhenFileExistsField;
            }
            set
            {
                 this._skipWhenFileExistsField = value;
            }
        }
        protected System.String _environmentVersionField;

        /// <summary>
        /// Access the EnvironmentVersion parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String EnvironmentVersion
        {
            get
            {
                return this._environmentVersionField;
            }
            set
            {
                 this._environmentVersionField = value;
            }
        }
        protected System.String _basePathField;

        /// <summary>
        /// Access the BasePath parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String BasePath
        {
            get
            {
                return this._basePathField;
            }
            set
            {
                 this._basePathField = value;
            }
        }
        protected System.String _fileNamePrefixField;

        /// <summary>
        /// Access the FileNamePrefix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNamePrefix
        {
            get
            {
                return this._fileNamePrefixField;
            }
            set
            {
                 this._fileNamePrefixField = value;
            }
        }
        protected System.String _fileNameSuffixField;

        /// <summary>
        /// Access the FileNameSuffix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNameSuffix
        {
            get
            {
                return this._fileNameSuffixField;
            }
            set
            {
                 this._fileNameSuffixField = value;
            }
        }
        protected System.Boolean _enableNullableContextField;

        /// <summary>
        /// Access the EnableNullableContext parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean EnableNullableContext
        {
            get
            {
                return this._enableNullableContextField;
            }
            set
            {
                 this._enableNullableContextField = value;
            }
        }
        protected CSharpClassGenerator_ViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public CSharpClassGenerator_ViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }
        public bool ShouldRenderModifiers => !(TemplateContext.GetModelFromContextByType<ITypeBase>() is IInterface);
    public bool ShouldRenderExplicitInterfaceName => !string.IsNullOrEmpty(Model.ExplicitInterfaceName) && !(TemplateContext.GetModelFromContextByType<ITypeBase>() is IInterface);
    public string TypeName => Model.TypeName.GetCsharpFriendlyTypeName()
                                            .AppendNullableAnnotation(Model, TemplateContext.GetContextByType<CSharpClassGenerator>().EnableNullableContext)
                                            .AbbreviateNamespaces(TemplateContext.GetModelFromContextByType<ITypeBase>().GetNamespacesToAbbreviate());
    public string Name => Model.Name.Sanitize().GetCsharpFriendlyName();

        public TemplateInstanceContext TemplateContext { get; set; }

    }
    [System.CodeDom.Compiler.GeneratedCodeAttribute(@"T4PlusCSharpCodeGenerator", @"1.0.0.0")]
    public class CSharpClassGenerator_DefaultUsingsViewModel
    {
        [global::System.ComponentModel.Browsable(false)]
        public IEnumerable<ITypeBase> Model { get; set; }
        protected System.Boolean _createCodeGenerationHeaderField;

        /// <summary>
        /// Access the CreateCodeGenerationHeader parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean CreateCodeGenerationHeader
        {
            get
            {
                return this._createCodeGenerationHeaderField;
            }
            set
            {
                 this._createCodeGenerationHeaderField = value;
            }
        }
        protected System.Boolean _generateMultipleFilesField;

        /// <summary>
        /// Access the GenerateMultipleFiles parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean GenerateMultipleFiles
        {
            get
            {
                return this._generateMultipleFilesField;
            }
            set
            {
                 this._generateMultipleFilesField = value;
            }
        }
        protected System.Boolean _skipWhenFileExistsField;

        /// <summary>
        /// Access the SkipWhenFileExists parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean SkipWhenFileExists
        {
            get
            {
                return this._skipWhenFileExistsField;
            }
            set
            {
                 this._skipWhenFileExistsField = value;
            }
        }
        protected System.String _environmentVersionField;

        /// <summary>
        /// Access the EnvironmentVersion parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String EnvironmentVersion
        {
            get
            {
                return this._environmentVersionField;
            }
            set
            {
                 this._environmentVersionField = value;
            }
        }
        protected System.String _basePathField;

        /// <summary>
        /// Access the BasePath parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String BasePath
        {
            get
            {
                return this._basePathField;
            }
            set
            {
                 this._basePathField = value;
            }
        }
        protected System.String _fileNamePrefixField;

        /// <summary>
        /// Access the FileNamePrefix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNamePrefix
        {
            get
            {
                return this._fileNamePrefixField;
            }
            set
            {
                 this._fileNamePrefixField = value;
            }
        }
        protected System.String _fileNameSuffixField;

        /// <summary>
        /// Access the FileNameSuffix parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.String FileNameSuffix
        {
            get
            {
                return this._fileNameSuffixField;
            }
            set
            {
                 this._fileNameSuffixField = value;
            }
        }
        protected System.Boolean _enableNullableContextField;

        /// <summary>
        /// Access the EnableNullableContext parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public System.Boolean EnableNullableContext
        {
            get
            {
                return this._enableNullableContextField;
            }
            set
            {
                 this._enableNullableContextField = value;
            }
        }
        protected CSharpClassGenerator_ViewModel _viewModelField;

        /// <summary>
        /// Access the ViewModel parameter of the template.
        /// </summary>
        [global::System.ComponentModel.Browsable(false)]
        public CSharpClassGenerator_ViewModel ViewModel
        {
            get
            {
                return this._viewModelField;
            }
            set
            {
                 this._viewModelField = value;
            }
        }
        private readonly static string[] DefaultUsings = new[]
        {
            "System",
            "System.Collections.Generic",
            "System.Linq",
            "System.Text"
        };
        
        public IEnumerable<string> Usings
            => DefaultUsings
                .Union(Model.SelectMany(classItem => classItem.Metadata.GetStringValues(ModelFramework.Objects.MetadataNames.CustomUsing)))
                .OrderBy(ns => ns)
                .Distinct();


    }

}