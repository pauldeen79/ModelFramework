// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 5.0.13
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ModelFramework.Database
{
#nullable enable
    public partial record CheckConstraint : ModelFramework.Database.Contracts.ICheckConstraint
    {
        public string Expression
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public CheckConstraint(string expression, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.Expression = expression;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record DefaultValueConstraint : ModelFramework.Database.Contracts.IDefaultValueConstraint
    {
        public string FieldName
        {
            get;
        }

        public string DefaultValue
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public DefaultValueConstraint(string fieldName, string defaultValue, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.FieldName = fieldName;
            this.DefaultValue = defaultValue;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record ForeignKeyConstraint : ModelFramework.Database.Contracts.IForeignKeyConstraint
    {
        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IForeignKeyConstraintField> LocalFields
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IForeignKeyConstraintField> ForeignFields
        {
            get;
        }

        public string ForeignTableName
        {
            get;
        }

        public ModelFramework.Database.Contracts.CascadeAction CascadeUpdate
        {
            get;
        }

        public ModelFramework.Database.Contracts.CascadeAction CascadeDelete
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public ForeignKeyConstraint(System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IForeignKeyConstraintField> localFields, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IForeignKeyConstraintField> foreignFields, string foreignTableName, ModelFramework.Database.Contracts.CascadeAction cascadeUpdate, ModelFramework.Database.Contracts.CascadeAction cascadeDelete, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.LocalFields = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IForeignKeyConstraintField>(localFields);
            this.ForeignFields = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IForeignKeyConstraintField>(foreignFields);
            this.ForeignTableName = foreignTableName;
            this.CascadeUpdate = cascadeUpdate;
            this.CascadeDelete = cascadeDelete;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record ForeignKeyConstraintField : ModelFramework.Database.Contracts.IForeignKeyConstraintField
    {
        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public ForeignKeyConstraintField(string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record Index : ModelFramework.Database.Contracts.IIndex
    {
        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IIndexField> Fields
        {
            get;
        }

        public bool Unique
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public string FileGroupName
        {
            get;
        }

        public Index(System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IIndexField> fields, bool unique, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata, string fileGroupName)
        {
            this.Fields = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IIndexField>(fields);
            this.Unique = unique;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            this.FileGroupName = fileGroupName;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record IndexField : ModelFramework.Database.Contracts.IIndexField
    {
        public bool IsDescending
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public IndexField(bool isDescending, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.IsDescending = isDescending;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record PrimaryKeyConstraint : ModelFramework.Database.Contracts.IPrimaryKeyConstraint
    {
        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IPrimaryKeyConstraintField> Fields
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public string FileGroupName
        {
            get;
        }

        public PrimaryKeyConstraint(System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IPrimaryKeyConstraintField> fields, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata, string fileGroupName)
        {
            this.Fields = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IPrimaryKeyConstraintField>(fields);
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            this.FileGroupName = fileGroupName;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record PrimaryKeyConstraintField : ModelFramework.Database.Contracts.IPrimaryKeyConstraintField
    {
        public bool IsDescending
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public PrimaryKeyConstraintField(bool isDescending, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.IsDescending = isDescending;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record Schema : ModelFramework.Database.Contracts.ISchema
    {
        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.ITable> Tables
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IStoredProcedure> StoredProcedures
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IView> Views
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public Schema(System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.ITable> tables, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IStoredProcedure> storedProcedures, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IView> views, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.Tables = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.ITable>(tables);
            this.StoredProcedures = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IStoredProcedure>(storedProcedures);
            this.Views = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IView>(views);
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record StoredProcedure : ModelFramework.Database.Contracts.IStoredProcedure
    {
        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.ISqlStatement> Statements
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IStoredProcedureParameter> Parameters
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public StoredProcedure(System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.ISqlStatement> statements, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IStoredProcedureParameter> parameters, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.Statements = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.ISqlStatement>(statements);
            this.Parameters = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IStoredProcedureParameter>(parameters);
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record StoredProcedureParameter : ModelFramework.Database.Contracts.IStoredProcedureParameter
    {
        public string Type
        {
            get;
        }

        public string DefaultValue
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public StoredProcedureParameter(string type, string defaultValue, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.Type = type;
            this.DefaultValue = defaultValue;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record Table : ModelFramework.Database.Contracts.ITable
    {
        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IPrimaryKeyConstraint> PrimaryKeyConstraints
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IUniqueConstraint> UniqueConstraints
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IDefaultValueConstraint> DefaultValueConstraints
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IForeignKeyConstraint> ForeignKeyConstraints
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IIndex> Indexes
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.ITableField> Fields
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public string FileGroupName
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.ICheckConstraint> CheckConstraints
        {
            get;
        }

        public Table(System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IPrimaryKeyConstraint> primaryKeyConstraints, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IUniqueConstraint> uniqueConstraints, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IDefaultValueConstraint> defaultValueConstraints, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IForeignKeyConstraint> foreignKeyConstraints, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IIndex> indexes, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.ITableField> fields, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata, string fileGroupName, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.ICheckConstraint> checkConstraints)
        {
            this.PrimaryKeyConstraints = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IPrimaryKeyConstraint>(primaryKeyConstraints);
            this.UniqueConstraints = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IUniqueConstraint>(uniqueConstraints);
            this.DefaultValueConstraints = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IDefaultValueConstraint>(defaultValueConstraints);
            this.ForeignKeyConstraints = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IForeignKeyConstraint>(foreignKeyConstraints);
            this.Indexes = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IIndex>(indexes);
            this.Fields = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.ITableField>(fields);
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            this.FileGroupName = fileGroupName;
            this.CheckConstraints = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.ICheckConstraint>(checkConstraints);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record TableField : ModelFramework.Database.Contracts.ITableField
    {
        public string Type
        {
            get;
        }

        public bool IsIdentity
        {
            get;
        }

        public bool IsRequired
        {
            get;
        }

        public System.Nullable<byte> NumericPrecision
        {
            get;
        }

        public System.Nullable<byte> NumericScale
        {
            get;
        }

        public System.Nullable<int> StringLength
        {
            get;
        }

        public string StringCollation
        {
            get;
        }

        public bool IsStringMaxLength
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.ICheckConstraint> CheckConstraints
        {
            get;
        }

        public TableField(string type, bool isIdentity, bool isRequired, System.Nullable<byte> numericPrecision, System.Nullable<byte> numericScale, System.Nullable<int> stringLength, string stringCollation, bool isStringMaxLength, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.ICheckConstraint> checkConstraints)
        {
            this.Type = type;
            this.IsIdentity = isIdentity;
            this.IsRequired = isRequired;
            this.NumericPrecision = numericPrecision;
            this.NumericScale = numericScale;
            this.StringLength = stringLength;
            this.StringCollation = stringCollation;
            this.IsStringMaxLength = isStringMaxLength;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            this.CheckConstraints = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.ICheckConstraint>(checkConstraints);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record UniqueConstraint : ModelFramework.Database.Contracts.IUniqueConstraint
    {
        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IUniqueConstraintField> Fields
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public string FileGroupName
        {
            get;
        }

        public UniqueConstraint(System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IUniqueConstraintField> fields, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata, string fileGroupName)
        {
            this.Fields = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IUniqueConstraintField>(fields);
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            this.FileGroupName = fileGroupName;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record UniqueConstraintField : ModelFramework.Database.Contracts.IUniqueConstraintField
    {
        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public UniqueConstraintField(string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record View : ModelFramework.Database.Contracts.IView
    {
        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IViewField> SelectFields
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IViewOrderByField> OrderByFields
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IViewField> GroupByFields
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IViewSource> Sources
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IViewCondition> Conditions
        {
            get;
        }

        public System.Nullable<int> Top
        {
            get;
        }

        public bool TopPercent
        {
            get;
        }

        public bool Distinct
        {
            get;
        }

        public string Definition
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public View(System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IViewField> selectFields, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IViewOrderByField> orderByFields, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IViewField> groupByFields, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IViewSource> sources, System.Collections.Generic.IEnumerable<ModelFramework.Database.Contracts.IViewCondition> conditions, System.Nullable<int> top, bool topPercent, bool distinct, string definition, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.SelectFields = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IViewField>(selectFields);
            this.OrderByFields = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IViewOrderByField>(orderByFields);
            this.GroupByFields = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IViewField>(groupByFields);
            this.Sources = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IViewSource>(sources);
            this.Conditions = new CrossCutting.Common.ValueCollection<ModelFramework.Database.Contracts.IViewCondition>(conditions);
            this.Top = top;
            this.TopPercent = topPercent;
            this.Distinct = distinct;
            this.Definition = definition;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record ViewCondition : ModelFramework.Database.Contracts.IViewCondition
    {
        public string Expression
        {
            get;
        }

        public string Combination
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public string FileGroupName
        {
            get;
        }

        public ViewCondition(string expression, string combination, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata, string fileGroupName)
        {
            this.Expression = expression;
            this.Combination = combination;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            this.FileGroupName = fileGroupName;
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record ViewField : ModelFramework.Database.Contracts.IViewField
    {
        public string SourceSchemaName
        {
            get;
        }

        public string SourceObjectName
        {
            get;
        }

        public string Expression
        {
            get;
        }

        public string Alias
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public ViewField(string sourceSchemaName, string sourceObjectName, string expression, string alias, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.SourceSchemaName = sourceSchemaName;
            this.SourceObjectName = sourceObjectName;
            this.Expression = expression;
            this.Alias = alias;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record ViewOrderByField : ModelFramework.Database.Contracts.IViewOrderByField
    {
        public bool IsDescending
        {
            get;
        }

        public string SourceSchemaName
        {
            get;
        }

        public string SourceObjectName
        {
            get;
        }

        public string Expression
        {
            get;
        }

        public string Alias
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public ViewOrderByField(bool isDescending, string sourceSchemaName, string sourceObjectName, string expression, string alias, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.IsDescending = isDescending;
            this.SourceSchemaName = sourceSchemaName;
            this.SourceObjectName = sourceObjectName;
            this.Expression = expression;
            this.Alias = alias;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore

#nullable enable
    public partial record ViewSource : ModelFramework.Database.Contracts.IViewSource
    {
        public string Alias
        {
            get;
        }

        public string SourceSchemaName
        {
            get;
        }

        public string SourceObjectName
        {
            get;
        }

        public string Name
        {
            get;
        }

        public CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata> Metadata
        {
            get;
        }

        public ViewSource(string alias, string sourceSchemaName, string sourceObjectName, string name, System.Collections.Generic.IEnumerable<ModelFramework.Common.Contracts.IMetadata> metadata)
        {
            this.Alias = alias;
            this.SourceSchemaName = sourceSchemaName;
            this.SourceObjectName = sourceObjectName;
            this.Name = name;
            this.Metadata = new CrossCutting.Common.ValueCollection<ModelFramework.Common.Contracts.IMetadata>(metadata);
            System.ComponentModel.DataAnnotations.Validator.ValidateObject(this, new System.ComponentModel.DataAnnotations.ValidationContext(this, null, null), true);
        }
    }
#nullable restore
}
