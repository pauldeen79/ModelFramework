// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 6.0.9
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ModelFramework.Database.Builders
{
#nullable enable
    public partial class ViewConditionBuilder
    {
        public System.Text.StringBuilder Expression
        {
            get
            {
                return _expressionDelegate.Value;
            }
            set
            {
                _expressionDelegate = new (() => value);
            }
        }

        public System.Text.StringBuilder Combination
        {
            get
            {
                return _combinationDelegate.Value;
            }
            set
            {
                _combinationDelegate = new (() => value);
            }
        }

        public System.Collections.Generic.List<ModelFramework.Common.Builders.MetadataBuilder> Metadata
        {
            get;
            set;
        }

        public System.Text.StringBuilder FileGroupName
        {
            get
            {
                return _fileGroupNameDelegate.Value;
            }
            set
            {
                _fileGroupNameDelegate = new (() => value);
            }
        }

        public ModelFramework.Database.Contracts.IViewCondition Build()
        {
            #pragma warning disable CS8604 // Possible null reference argument.
            return new ModelFramework.Database.ViewCondition(Expression?.ToString(), Combination?.ToString(), Metadata.Select(x => x.Build()), FileGroupName?.ToString());
            #pragma warning restore CS8604 // Possible null reference argument.
        }

        public ViewConditionBuilder WithExpression(System.Text.StringBuilder expression)
        {
            Expression = expression;
            return this;
        }

        public ViewConditionBuilder WithExpression(System.Func<System.Text.StringBuilder> expressionDelegate)
        {
            _expressionDelegate = new (expressionDelegate);
            return this;
        }

        public ViewConditionBuilder WithExpression(string value)
        {
            Expression.Clear().Append(value);
            return this;
        }

        public ViewConditionBuilder AppendToExpression(string value)
        {
            Expression.Append(value);
            return this;
        }

        public ViewConditionBuilder AppendLineToExpression(string value)
        {
            Expression.AppendLine(value);
            return this;
        }

        public ViewConditionBuilder WithCombination(System.Text.StringBuilder combination)
        {
            Combination = combination;
            return this;
        }

        public ViewConditionBuilder WithCombination(System.Func<System.Text.StringBuilder> combinationDelegate)
        {
            _combinationDelegate = new (combinationDelegate);
            return this;
        }

        public ViewConditionBuilder WithCombination(string value)
        {
            Combination.Clear().Append(value);
            return this;
        }

        public ViewConditionBuilder AppendToCombination(string value)
        {
            Combination.Append(value);
            return this;
        }

        public ViewConditionBuilder AppendLineToCombination(string value)
        {
            Combination.AppendLine(value);
            return this;
        }

        public ViewConditionBuilder AddMetadata(System.Collections.Generic.IEnumerable<ModelFramework.Common.Builders.MetadataBuilder> metadata)
        {
            return AddMetadata(metadata.ToArray());
        }

        public ViewConditionBuilder AddMetadata(params ModelFramework.Common.Builders.MetadataBuilder[] metadata)
        {
            Metadata.AddRange(metadata);
            return this;
        }

        public ViewConditionBuilder AddMetadata(string name, object? value)
        {
            AddMetadata(new ModelFramework.Common.Builders.MetadataBuilder().WithName(name).WithValue(value));
            return this;
        }

        public ViewConditionBuilder WithFileGroupName(System.Text.StringBuilder fileGroupName)
        {
            FileGroupName = fileGroupName;
            return this;
        }

        public ViewConditionBuilder WithFileGroupName(System.Func<System.Text.StringBuilder> fileGroupNameDelegate)
        {
            _fileGroupNameDelegate = new (fileGroupNameDelegate);
            return this;
        }

        public ViewConditionBuilder WithFileGroupName(string value)
        {
            FileGroupName.Clear().Append(value);
            return this;
        }

        public ViewConditionBuilder AppendToFileGroupName(string value)
        {
            FileGroupName.Append(value);
            return this;
        }

        public ViewConditionBuilder AppendLineToFileGroupName(string value)
        {
            FileGroupName.AppendLine(value);
            return this;
        }

        public ViewConditionBuilder()
        {
            Metadata = new System.Collections.Generic.List<ModelFramework.Common.Builders.MetadataBuilder>();
            #pragma warning disable CS8603 // Possible null reference return.
            _expressionDelegate = new (() => new System.Text.StringBuilder());
            _combinationDelegate = new (() => new System.Text.StringBuilder());
            _fileGroupNameDelegate = new (() => new System.Text.StringBuilder());
            #pragma warning restore CS8603 // Possible null reference return.
        }

        public ViewConditionBuilder(ModelFramework.Database.Contracts.IViewCondition source)
        {
            Metadata = new System.Collections.Generic.List<ModelFramework.Common.Builders.MetadataBuilder>();
            _expressionDelegate = new (() => new System.Text.StringBuilder(source.Expression));
            _combinationDelegate = new (() => new System.Text.StringBuilder(source.Combination));
            Metadata.AddRange(source.Metadata.Select(x => new ModelFramework.Common.Builders.MetadataBuilder(x)));
            _fileGroupNameDelegate = new (() => new System.Text.StringBuilder(source.FileGroupName));
        }

        protected System.Lazy<System.Text.StringBuilder> _expressionDelegate;

        protected System.Lazy<System.Text.StringBuilder> _combinationDelegate;

        protected System.Lazy<System.Text.StringBuilder> _fileGroupNameDelegate;
    }
#nullable restore
}

