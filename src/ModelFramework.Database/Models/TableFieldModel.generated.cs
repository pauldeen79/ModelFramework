// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 7.0.11
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ModelFramework.Database.Models
{
#nullable enable
    public partial class TableFieldModel
    {
        public string Type
        {
            get;
            set;
        }

        public bool IsIdentity
        {
            get;
            set;
        }

        public bool IsRequired
        {
            get;
            set;
        }

        public System.Nullable<byte> NumericPrecision
        {
            get;
            set;
        }

        public System.Nullable<byte> NumericScale
        {
            get;
            set;
        }

        public System.Nullable<int> StringLength
        {
            get;
            set;
        }

        public string StringCollation
        {
            get;
            set;
        }

        public bool IsStringMaxLength
        {
            get;
            set;
        }

        public string Name
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Common.Models.MetadataModel> Metadata
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Database.Models.CheckConstraintModel> CheckConstraints
        {
            get;
            set;
        }

        public ModelFramework.Database.Contracts.ITableField ToEntity()
        {
            #pragma warning disable CS8604 // Possible null reference argument.
            #pragma warning disable CS8600 // Converting null literal or possible null value to non-nullable type.
            return new ModelFramework.Database.TableField(Type, IsIdentity, IsRequired, NumericPrecision, NumericScale, StringLength, StringCollation, IsStringMaxLength, Name, Metadata.Select(x => x.ToEntity()), CheckConstraints.Select(x => x.ToEntity()));
            #pragma warning restore CS8600 // Converting null literal or possible null value to non-nullable type.
            #pragma warning restore CS8604 // Possible null reference argument.
        }

        public TableFieldModel()
        {
            Metadata = new System.Collections.Generic.List<ModelFramework.Common.Models.MetadataModel>();
            CheckConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.CheckConstraintModel>();
            #pragma warning disable CS8603 // Possible null reference return.
            Type = string.Empty;
            IsIdentity = default(System.Boolean);
            IsRequired = default(System.Boolean);
            StringCollation = string.Empty;
            IsStringMaxLength = default(System.Boolean);
            Name = string.Empty;
            #pragma warning restore CS8603 // Possible null reference return.
        }

        public TableFieldModel(ModelFramework.Database.Contracts.ITableField source)
        {
            Metadata = new System.Collections.Generic.List<ModelFramework.Common.Models.MetadataModel>();
            CheckConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.CheckConstraintModel>();
            Type = source.Type;
            IsIdentity = source.IsIdentity;
            IsRequired = source.IsRequired;
            NumericPrecision = source.NumericPrecision;
            NumericScale = source.NumericScale;
            StringLength = source.StringLength;
            StringCollation = source.StringCollation;
            IsStringMaxLength = source.IsStringMaxLength;
            Name = source.Name;
            Metadata.AddRange(source.Metadata.Select(x => new ModelFramework.Common.Models.MetadataModel(x)));
            CheckConstraints.AddRange(source.CheckConstraints.Select(x => new ModelFramework.Database.Models.CheckConstraintModel(x)));
        }
    }
#nullable restore
}

