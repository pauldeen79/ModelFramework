// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 7.0.11
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ModelFramework.Database.Models
{
#nullable enable
    public partial class TableModel
    {
        public System.Collections.Generic.List<ModelFramework.Database.Models.PrimaryKeyConstraintModel> PrimaryKeyConstraints
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Database.Models.UniqueConstraintModel> UniqueConstraints
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Database.Models.DefaultValueConstraintModel> DefaultValueConstraints
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Database.Models.ForeignKeyConstraintModel> ForeignKeyConstraints
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Database.Models.IndexModel> Indexes
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Database.Models.TableFieldModel> Fields
        {
            get;
            set;
        }

        public string Name
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Common.Models.MetadataModel> Metadata
        {
            get;
            set;
        }

        public string FileGroupName
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Database.Models.CheckConstraintModel> CheckConstraints
        {
            get;
            set;
        }

        public ModelFramework.Database.Contracts.ITable ToEntity()
        {
            #pragma warning disable CS8604 // Possible null reference argument.
            #pragma warning disable CS8600 // Converting null literal or possible null value to non-nullable type.
            return new ModelFramework.Database.Table(PrimaryKeyConstraints.Select(x => x.ToEntity()), UniqueConstraints.Select(x => x.ToEntity()), DefaultValueConstraints.Select(x => x.ToEntity()), ForeignKeyConstraints.Select(x => x.ToEntity()), Indexes.Select(x => x.ToEntity()), Fields.Select(x => x.ToEntity()), Name, Metadata.Select(x => x.ToEntity()), FileGroupName, CheckConstraints.Select(x => x.ToEntity()));
            #pragma warning restore CS8600 // Converting null literal or possible null value to non-nullable type.
            #pragma warning restore CS8604 // Possible null reference argument.
        }

        public TableModel()
        {
            PrimaryKeyConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.PrimaryKeyConstraintModel>();
            UniqueConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.UniqueConstraintModel>();
            DefaultValueConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.DefaultValueConstraintModel>();
            ForeignKeyConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.ForeignKeyConstraintModel>();
            Indexes = new System.Collections.Generic.List<ModelFramework.Database.Models.IndexModel>();
            Fields = new System.Collections.Generic.List<ModelFramework.Database.Models.TableFieldModel>();
            Metadata = new System.Collections.Generic.List<ModelFramework.Common.Models.MetadataModel>();
            CheckConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.CheckConstraintModel>();
            #pragma warning disable CS8603 // Possible null reference return.
            Name = string.Empty;
            FileGroupName = string.Empty;
            #pragma warning restore CS8603 // Possible null reference return.
        }

        public TableModel(ModelFramework.Database.Contracts.ITable source)
        {
            PrimaryKeyConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.PrimaryKeyConstraintModel>();
            UniqueConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.UniqueConstraintModel>();
            DefaultValueConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.DefaultValueConstraintModel>();
            ForeignKeyConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.ForeignKeyConstraintModel>();
            Indexes = new System.Collections.Generic.List<ModelFramework.Database.Models.IndexModel>();
            Fields = new System.Collections.Generic.List<ModelFramework.Database.Models.TableFieldModel>();
            Metadata = new System.Collections.Generic.List<ModelFramework.Common.Models.MetadataModel>();
            CheckConstraints = new System.Collections.Generic.List<ModelFramework.Database.Models.CheckConstraintModel>();
            PrimaryKeyConstraints.AddRange(source.PrimaryKeyConstraints.Select(x => new ModelFramework.Database.Models.PrimaryKeyConstraintModel(x)));
            UniqueConstraints.AddRange(source.UniqueConstraints.Select(x => new ModelFramework.Database.Models.UniqueConstraintModel(x)));
            DefaultValueConstraints.AddRange(source.DefaultValueConstraints.Select(x => new ModelFramework.Database.Models.DefaultValueConstraintModel(x)));
            ForeignKeyConstraints.AddRange(source.ForeignKeyConstraints.Select(x => new ModelFramework.Database.Models.ForeignKeyConstraintModel(x)));
            Indexes.AddRange(source.Indexes.Select(x => new ModelFramework.Database.Models.IndexModel(x)));
            Fields.AddRange(source.Fields.Select(x => new ModelFramework.Database.Models.TableFieldModel(x)));
            Name = source.Name;
            Metadata.AddRange(source.Metadata.Select(x => new ModelFramework.Common.Models.MetadataModel(x)));
            FileGroupName = source.FileGroupName;
            CheckConstraints.AddRange(source.CheckConstraints.Select(x => new ModelFramework.Database.Models.CheckConstraintModel(x)));
        }
    }
#nullable restore
}

