// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 7.0.12
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ModelFramework.Database.Models
{
#nullable enable
    public partial class SchemaModel
    {
        public System.Collections.Generic.List<ModelFramework.Database.Models.TableModel> Tables
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Database.Models.StoredProcedureModel> StoredProcedures
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Database.Models.ViewModel> Views
        {
            get;
            set;
        }

        public string Name
        {
            get;
            set;
        }

        public System.Collections.Generic.List<ModelFramework.Common.Models.MetadataModel> Metadata
        {
            get;
            set;
        }

        public ModelFramework.Database.Contracts.ISchema ToEntity()
        {
            #pragma warning disable CS8604 // Possible null reference argument.
            #pragma warning disable CS8600 // Converting null literal or possible null value to non-nullable type.
            return new ModelFramework.Database.Schema(Tables.Select(x => x.ToEntity()), StoredProcedures.Select(x => x.ToEntity()), Views.Select(x => x.ToEntity()), Name, Metadata.Select(x => x.ToEntity()));
            #pragma warning restore CS8600 // Converting null literal or possible null value to non-nullable type.
            #pragma warning restore CS8604 // Possible null reference argument.
        }

        public SchemaModel()
        {
            Tables = new System.Collections.Generic.List<ModelFramework.Database.Models.TableModel>();
            StoredProcedures = new System.Collections.Generic.List<ModelFramework.Database.Models.StoredProcedureModel>();
            Views = new System.Collections.Generic.List<ModelFramework.Database.Models.ViewModel>();
            Metadata = new System.Collections.Generic.List<ModelFramework.Common.Models.MetadataModel>();
            Name = string.Empty;
        }

        public SchemaModel(ModelFramework.Database.Contracts.ISchema source)
        {
            Tables = new System.Collections.Generic.List<ModelFramework.Database.Models.TableModel>();
            StoredProcedures = new System.Collections.Generic.List<ModelFramework.Database.Models.StoredProcedureModel>();
            Views = new System.Collections.Generic.List<ModelFramework.Database.Models.ViewModel>();
            Metadata = new System.Collections.Generic.List<ModelFramework.Common.Models.MetadataModel>();
            Tables.AddRange(source.Tables.Select(x => new ModelFramework.Database.Models.TableModel(x)));
            StoredProcedures.AddRange(source.StoredProcedures.Select(x => new ModelFramework.Database.Models.StoredProcedureModel(x)));
            Views.AddRange(source.Views.Select(x => new ModelFramework.Database.Models.ViewModel(x)));
            Name = source.Name;
            Metadata.AddRange(source.Metadata.Select(x => new ModelFramework.Common.Models.MetadataModel(x)));
        }
    }
#nullable restore
}

