// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 6.0.9
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ModelFramework.Objects.Builders
{
#nullable enable
    public partial class OverloadBuilder
    {
        public System.Text.StringBuilder MethodName
        {
            get
            {
                return _methodNameDelegate.Value;
            }
            set
            {
                _methodNameDelegate = new (() => value);
            }
        }

        public System.Text.StringBuilder InitializeExpression
        {
            get
            {
                return _initializeExpressionDelegate.Value;
            }
            set
            {
                _initializeExpressionDelegate = new (() => value);
            }
        }

        public System.Collections.Generic.List<ModelFramework.Objects.Builders.ParameterBuilder> Parameters
        {
            get;
            set;
        }

        public ModelFramework.Objects.Contracts.IOverload Build()
        {
            #pragma warning disable CS8604 // Possible null reference argument.
            return new ModelFramework.Objects.Overload(MethodName?.ToString(), InitializeExpression?.ToString(), Parameters.Select(x => x.Build()));
            #pragma warning restore CS8604 // Possible null reference argument.
        }

        public OverloadBuilder WithMethodName(System.Text.StringBuilder methodName)
        {
            MethodName = methodName;
            return this;
        }

        public OverloadBuilder WithMethodName(System.Func<System.Text.StringBuilder> methodNameDelegate)
        {
            _methodNameDelegate = new (methodNameDelegate);
            return this;
        }

        public OverloadBuilder WithMethodName(string value)
        {
            MethodName.Clear().Append(value);
            return this;
        }

        public OverloadBuilder AppendToMethodName(string value)
        {
            MethodName.Append(value);
            return this;
        }

        public OverloadBuilder AppendLineToMethodName(string value)
        {
            MethodName.AppendLine(value);
            return this;
        }

        public OverloadBuilder WithInitializeExpression(System.Text.StringBuilder initializeExpression)
        {
            InitializeExpression = initializeExpression;
            return this;
        }

        public OverloadBuilder WithInitializeExpression(System.Func<System.Text.StringBuilder> initializeExpressionDelegate)
        {
            _initializeExpressionDelegate = new (initializeExpressionDelegate);
            return this;
        }

        public OverloadBuilder WithInitializeExpression(string value)
        {
            InitializeExpression.Clear().Append(value);
            return this;
        }

        public OverloadBuilder AppendToInitializeExpression(string value)
        {
            InitializeExpression.Append(value);
            return this;
        }

        public OverloadBuilder AppendLineToInitializeExpression(string value)
        {
            InitializeExpression.AppendLine(value);
            return this;
        }

        public OverloadBuilder AddParameters(System.Collections.Generic.IEnumerable<ModelFramework.Objects.Builders.ParameterBuilder> parameters)
        {
            return AddParameters(parameters.ToArray());
        }

        public OverloadBuilder AddParameters(params ModelFramework.Objects.Builders.ParameterBuilder[] parameters)
        {
            Parameters.AddRange(parameters);
            return this;
        }

        public OverloadBuilder AddParameter(string name, System.Type type)
        {
            AddParameters(new ModelFramework.Objects.Builders.ParameterBuilder().WithName(name).WithType(type));
            return this;
        }

        public OverloadBuilder AddParameter(string name, string typeName)
        {
            AddParameters(new ModelFramework.Objects.Builders.ParameterBuilder().WithName(name).WithTypeName(typeName));
            return this;
        }

        public OverloadBuilder()
        {
            Parameters = new System.Collections.Generic.List<ModelFramework.Objects.Builders.ParameterBuilder>();
            #pragma warning disable CS8603 // Possible null reference return.
            _methodNameDelegate = new (() => new System.Text.StringBuilder());
            _initializeExpressionDelegate = new (() => new System.Text.StringBuilder());
            #pragma warning restore CS8603 // Possible null reference return.
        }

        public OverloadBuilder(ModelFramework.Objects.Contracts.IOverload source)
        {
            Parameters = new System.Collections.Generic.List<ModelFramework.Objects.Builders.ParameterBuilder>();
            _methodNameDelegate = new (() => new System.Text.StringBuilder(source.MethodName));
            _initializeExpressionDelegate = new (() => new System.Text.StringBuilder(source.InitializeExpression));
            Parameters.AddRange(source.Parameters.Select(x => new ModelFramework.Objects.Builders.ParameterBuilder(x)));
        }

        protected System.Lazy<System.Text.StringBuilder> _methodNameDelegate;

        protected System.Lazy<System.Text.StringBuilder> _initializeExpressionDelegate;
    }
#nullable restore
}

