// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 6.0.5
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace ModelFramework.Objects.CodeStatements.Builders
{
#nullable enable
    public partial class LiteralCodeStatementBuilder : ModelFramework.Objects.Contracts.ICodeStatementBuilder
    {
        public System.Collections.Generic.List<ModelFramework.Common.Builders.MetadataBuilder> Metadata
        {
            get;
            set;
        }

        public string Statement
        {
            get
            {
                return _statementDelegate.Value;
            }
            set
            {
                _statementDelegate = new (() => value);
            }
        }

        public LiteralCodeStatementBuilder AddMetadata(params ModelFramework.Common.Builders.MetadataBuilder[] metadata)
        {
            Metadata.AddRange(metadata);
            return this;
        }

        public LiteralCodeStatementBuilder AddMetadata(System.Collections.Generic.IEnumerable<ModelFramework.Common.Builders.MetadataBuilder> metadata)
        {
            return AddMetadata(metadata.ToArray());
        }

        public LiteralCodeStatementBuilder AddMetadata(string name, object? value)
        {
            AddMetadata(new ModelFramework.Common.Builders.MetadataBuilder().WithName(name).WithValue(value));
            return this;
        }

        public ModelFramework.Objects.Contracts.ICodeStatement Build()
        {
            return new ModelFramework.Objects.CodeStatements.LiteralCodeStatement(Statement, Metadata.Select(x => x.Build()));
        }

        public LiteralCodeStatementBuilder WithStatement(System.Func<string> statementDelegate)
        {
            _statementDelegate = new (statementDelegate);
            return this;
        }

        public LiteralCodeStatementBuilder WithStatement(string statement)
        {
            Statement = statement;
            return this;
        }

        public LiteralCodeStatementBuilder()
        {
            Metadata = new System.Collections.Generic.List<ModelFramework.Common.Builders.MetadataBuilder>();
            _statementDelegate = new (() => string.Empty);
        }

        public LiteralCodeStatementBuilder(ModelFramework.Objects.CodeStatements.LiteralCodeStatement source)
        {
            Metadata = new System.Collections.Generic.List<ModelFramework.Common.Builders.MetadataBuilder>();
            Metadata.AddRange(source.Metadata.Select(x => new ModelFramework.Common.Builders.MetadataBuilder(x)));
            _statementDelegate = new (() => source.Statement);
        }

        private System.Lazy<string> _statementDelegate;
    }
#nullable restore
}

